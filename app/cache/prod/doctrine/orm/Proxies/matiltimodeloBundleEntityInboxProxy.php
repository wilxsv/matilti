<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class matiltimodeloBundleEntityInboxProxy extends \matilti\modeloBundle\Entity\Inbox implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setUpdatedindb($updatedindb)
    {
        $this->__load();
        return parent::setUpdatedindb($updatedindb);
    }

    public function getUpdatedindb()
    {
        $this->__load();
        return parent::getUpdatedindb();
    }

    public function setReceivingdatetime($receivingdatetime)
    {
        $this->__load();
        return parent::setReceivingdatetime($receivingdatetime);
    }

    public function getReceivingdatetime()
    {
        $this->__load();
        return parent::getReceivingdatetime();
    }

    public function setText($text)
    {
        $this->__load();
        return parent::setText($text);
    }

    public function getText()
    {
        $this->__load();
        return parent::getText();
    }

    public function setSendernumber($sendernumber)
    {
        $this->__load();
        return parent::setSendernumber($sendernumber);
    }

    public function getSendernumber()
    {
        $this->__load();
        return parent::getSendernumber();
    }

    public function setCoding($coding)
    {
        $this->__load();
        return parent::setCoding($coding);
    }

    public function getCoding()
    {
        $this->__load();
        return parent::getCoding();
    }

    public function setUdh($udh)
    {
        $this->__load();
        return parent::setUdh($udh);
    }

    public function getUdh()
    {
        $this->__load();
        return parent::getUdh();
    }

    public function setSmscnumber($smscnumber)
    {
        $this->__load();
        return parent::setSmscnumber($smscnumber);
    }

    public function getSmscnumber()
    {
        $this->__load();
        return parent::getSmscnumber();
    }

    public function setClass($class)
    {
        $this->__load();
        return parent::setClass($class);
    }

    public function getClass()
    {
        $this->__load();
        return parent::getClass();
    }

    public function setTextdecoded($textdecoded)
    {
        $this->__load();
        return parent::setTextdecoded($textdecoded);
    }

    public function getTextdecoded()
    {
        $this->__load();
        return parent::getTextdecoded();
    }

    public function setRecipientid($recipientid)
    {
        $this->__load();
        return parent::setRecipientid($recipientid);
    }

    public function getRecipientid()
    {
        $this->__load();
        return parent::getRecipientid();
    }

    public function setProcessed($processed)
    {
        $this->__load();
        return parent::setProcessed($processed);
    }

    public function getProcessed()
    {
        $this->__load();
        return parent::getProcessed();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'updatedindb', 'receivingdatetime', 'text', 'sendernumber', 'coding', 'udh', 'smscnumber', 'class', 'textdecoded', 'recipientid', 'processed');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}